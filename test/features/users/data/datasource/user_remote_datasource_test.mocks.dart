// Mocks generated by Mockito 5.4.5 from annotations
// in assignment/test/features/users/data/datasource/user_remote_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:assignment/core/api_response.dart' as _i2;
import 'package:assignment/features/users/data/datasource/user_remote_datasource.dart'
    as _i3;
import 'package:assignment/features/users/data/model/user_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0<T> extends _i1.SmartFake
    implements _i2.ApiResponse<T> {
  _FakeApiResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDatasource extends _i1.Mock
    implements _i3.UserRemoteDatasource {
  @override
  _i4.Future<_i2.ApiResponse<List<_i5.UserModel>>> getUsers(
    int? noOfUser,
    int? page,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getUsers, [noOfUser, page]),
            returnValue: _i4.Future<_i2.ApiResponse<List<_i5.UserModel>>>.value(
              _FakeApiResponse_0<List<_i5.UserModel>>(
                this,
                Invocation.method(#getUsers, [noOfUser, page]),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.ApiResponse<List<_i5.UserModel>>>.value(
                  _FakeApiResponse_0<List<_i5.UserModel>>(
                    this,
                    Invocation.method(#getUsers, [noOfUser, page]),
                  ),
                ),
          )
          as _i4.Future<_i2.ApiResponse<List<_i5.UserModel>>>);

  @override
  _i4.Future<_i2.ApiResponse<_i5.UserModel>> getUserDetails(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUserDetails, [id]),
            returnValue: _i4.Future<_i2.ApiResponse<_i5.UserModel>>.value(
              _FakeApiResponse_0<_i5.UserModel>(
                this,
                Invocation.method(#getUserDetails, [id]),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.ApiResponse<_i5.UserModel>>.value(
                  _FakeApiResponse_0<_i5.UserModel>(
                    this,
                    Invocation.method(#getUserDetails, [id]),
                  ),
                ),
          )
          as _i4.Future<_i2.ApiResponse<_i5.UserModel>>);
}
